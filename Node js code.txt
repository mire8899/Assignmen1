function calculateTotalTarget(startDate, endDate, totalAnnualTarget) {
    // Helper function to get the total working days excluding Fridays for a given month
    const getWorkingDaysExcludingFridays = (year, month) => {
        let workingDays = 0;
        const daysInMonth = new Date(year, month + 1, 0).getDate();
        for (let day = 1; day <= daysInMonth; day++) {
            const date = new Date(year, month, day);
            // Check if it's a Friday
            if (date.getDay() !== 5) {
                workingDays++;
            }
        }
        return workingDays;
    };

    // Helper function to get the working days excluding Fridays in the specific date range
    const getDaysWorkedExcludingFridays = (start, end) => {
        let count = 0;
        let currentDate = new Date(start);
        while (currentDate <= end) {
            if (currentDate.getDay() !== 5) {
                count++;
            }
            currentDate.setDate(currentDate.getDate() + 1);
        }
        return count;
    };

    const start = new Date(startDate);
    const end = new Date(endDate);
    const result = {
        daysExcludingFridays: [],
        daysWorkedExcludingFridays: [],
        monthlyTargets: [],
        totalTarget: 0
    };

    // Loop through the months in the given date range
    let currentMonth = new Date(start.getFullYear(), start.getMonth());
    const endMonth = new Date(end.getFullYear(), end.getMonth());

    while (currentMonth <= endMonth) {
        const month = currentMonth.getMonth();
        const year = currentMonth.getFullYear();

        // Total working days excluding Fridays for the month
        const totalDaysInMonth = getWorkingDaysExcludingFridays(year, month);
        result.daysExcludingFridays.push(totalDaysInMonth);

        // Calculate the number of worked days in the specified range
        const monthStart = new Date(year, month, 1);
        const monthEnd = new Date(year, month + 1, 0);
        const rangeStart = currentMonth >= start ? currentMonth : start;
        const rangeEnd = monthEnd <= end ? monthEnd : end;
        const workedDays = getDaysWorkedExcludingFridays(rangeStart, rangeEnd);
        result.daysWorkedExcludingFridays.push(workedDays);

        // Calculate the monthly target based on valid working days
        if (totalDaysInMonth > 0) {
            const monthlyTarget = (workedDays / totalDaysInMonth) * (totalAnnualTarget / 12);
            result.monthlyTargets.push(monthlyTarget);
            result.totalTarget += monthlyTarget;
        } else {
            result.monthlyTargets.push(0);
        }

        // Move to the next month
        currentMonth.setMonth(currentMonth.getMonth() + 1);
    }

    return result;
}

// Example usage
const result = calculateTotalTarget('2024-01-15', '2024-03-10', 120000);
console.log(result);
